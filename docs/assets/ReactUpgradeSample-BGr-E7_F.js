import{j as e,r,f as h}from"./index-Ck-_GQcj.js";import{u as p}from"./DataProvider-CYoF5J8u.js";function x(){const{getData:t,setData:u}=p({selected:6},!0),[o,d]=r.useState(t().selected);return e.jsxs("div",{children:[e.jsx("button",{onClick:()=>{Promise.resolve().then(()=>{u({selected:0}),d(t().selected)})},children:"Select None"}),e.jsxs("h3",{children:["Parent Component (concurrent=","true",")"]}),e.jsxs("div",{children:["Current selection (by state): ",t().selected]}),e.jsxs("div",{children:["Current selection (by action): ",o]}),e.jsxs("h3",{children:["Child Component 1 (by action, concurrent=","true",")"]}),e.jsx(C,{parentSelected:t().selected,concurrentMode:!0}),e.jsxs("h3",{children:["Child Component 2 (by action, concurrent=","false",")"]}),e.jsx(C,{parentSelected:o,concurrentMode:!1})]})}const C=({parentSelected:n,concurrentMode:s})=>{const c=r.useRef(n),t=r.useRef(s),[u,o]=r.useState(n),[d,i]=r.useState(`${n} + 1`);t.current=s;const l=a=>{o(()=>(c.current=a,a))};return r.useEffect(()=>{t.current?l(n):h.flushSync(()=>l(n)),t.current?i(`${c.current} + 1`):h.flushSync(()=>i(`${c.current} + 1`))},[n]),e.jsxs("div",{children:["Parent selection: ",d]})},m=()=>e.jsx(x,{});export{m as ReactUpgradeSample,m as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVhY3RVcGdyYWRlU2FtcGxlLUJHci1FN19GLmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGFnZXMvUmVhY3RVcGdyYWRlU2FtcGxlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZURhdGFQcm92aWRlclYzIGFzIHVzZURhdGFQcm92aWRlciwgdXNlRGF0YVByb3ZpZGVyVjIgYXMgdXNlRHAgfSBmcm9tIFwiLi9iYXRjaC9EYXRhUHJvdmlkZXJcIjtcbmltcG9ydCB7IGZsdXNoU3luYyB9IGZyb20gXCJyZWFjdC1kb21cIjtcblxuLy8gcjE3XG4vLyAtIGFsbCBzZXRTdGF0ZSB3aWxsIGJlIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG4vLyByMTggY29tcGF0aWJsZSBtb2RlXG4vLyAtIHNldFN0YXRlIGluIHN5bmMgbW9kZSB3aWxsIGJlIGJhdGNoZWRcbi8vIC0gc2V0U3RhdGUgaW4gYXN5bmMgbW9kZSB3aWxsIGJlIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG4vLyByMTggY29uY3VycmVudCBtb2RlXG4vLyAtIGFsbCBzZXRTdGF0ZSB3aWxsIGJlIGJhdGNoZWRcblxuZnVuY3Rpb24gUGFyZW50Q29tcG9uZW50KCkge1xuICAgIGNvbnN0IHBhcmVudENvbmN1cnJlbnRNb2RlID0gdHJ1ZTtcbiAgICBjb25zdCBjaGlsZDFDb25jdXJyZW50TW9kZSA9IHRydWU7XG4gICAgY29uc3QgY2hpbGQyQ29uY3VycmVudE1vZGUgPSBmYWxzZTtcbiAgICAvLyBjb25jdXJyZW50IG1vZGUgaGVyZVxuICAgIGNvbnN0IHsgZ2V0RGF0YSwgc2V0RGF0YSB9ID0gdXNlRGF0YVByb3ZpZGVyKHsgc2VsZWN0ZWQ6IDYgfSwgcGFyZW50Q29uY3VycmVudE1vZGUpO1xuICAgIGNvbnN0IFtzZWxlY3RlZCwgc2V0U2VsZWN0ZWRdID0gdXNlU3RhdGUoZ2V0RGF0YSgpLnNlbGVjdGVkKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHdlIGZsdXNoU3luYyB0byBib3RoLCBpdCBpcyBub3Qgd29ya2luZ1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0RGF0YSh7IHNlbGVjdGVkOiAwIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYXNzdW1pbmcgdGhlIGRhdGEgaXMgdXBkYXRlZC5cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkKGdldERhdGEoKS5zZWxlY3RlZCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgU2VsZWN0IE5vbmVcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPGgzPlBhcmVudCBDb21wb25lbnQgKGNvbmN1cnJlbnQ9e3BhcmVudENvbmN1cnJlbnRNb2RlLnRvU3RyaW5nKCl9KTwvaDM+XG4gICAgICAgICAgICA8ZGl2PkN1cnJlbnQgc2VsZWN0aW9uIChieSBzdGF0ZSk6IHtnZXREYXRhKCkuc2VsZWN0ZWR9PC9kaXY+XG4gICAgICAgICAgICA8ZGl2PkN1cnJlbnQgc2VsZWN0aW9uIChieSBhY3Rpb24pOiB7c2VsZWN0ZWR9PC9kaXY+XG4gICAgICAgICAgICA8aDM+Q2hpbGQgQ29tcG9uZW50IDEgKGJ5IGFjdGlvbiwgY29uY3VycmVudD17Y2hpbGQxQ29uY3VycmVudE1vZGUudG9TdHJpbmcoKX0pPC9oMz5cbiAgICAgICAgICAgIDxDaGlsZENvbXBvbmVudCBwYXJlbnRTZWxlY3RlZD17Z2V0RGF0YSgpLnNlbGVjdGVkfSBjb25jdXJyZW50TW9kZT17Y2hpbGQxQ29uY3VycmVudE1vZGV9IC8+XG4gICAgICAgICAgICA8aDM+Q2hpbGQgQ29tcG9uZW50IDIgKGJ5IGFjdGlvbiwgY29uY3VycmVudD17Y2hpbGQyQ29uY3VycmVudE1vZGUudG9TdHJpbmcoKX0pPC9oMz5cbiAgICAgICAgICAgIDxDaGlsZENvbXBvbmVudCBwYXJlbnRTZWxlY3RlZD17c2VsZWN0ZWR9IGNvbmN1cnJlbnRNb2RlPXtjaGlsZDJDb25jdXJyZW50TW9kZX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn1cblxuY29uc3QgQ2hpbGRDb21wb25lbnQgPSAoeyBwYXJlbnRTZWxlY3RlZCwgY29uY3VycmVudE1vZGUgfTogeyBwYXJlbnRTZWxlY3RlZDogbnVtYmVyLCBjb25jdXJyZW50TW9kZT86IGJvb2xlYW4gfSkgPT4ge1xuICAgIGNvbnN0IHNlbGVjdGVkUmVmID0gdXNlUmVmKHBhcmVudFNlbGVjdGVkKTtcbiAgICBjb25zdCBjb25jdXJyZW50TW9kZVJlZiA9IHVzZVJlZihjb25jdXJyZW50TW9kZSk7XG4gICAgY29uc3QgW18sIHNldFNlbGVjdGVkXSA9IHVzZVN0YXRlKHBhcmVudFNlbGVjdGVkKTtcbiAgICBjb25zdCBbcGFyZW50U2VsZWN0aW9uRGlzcGxheSwgc2V0UGFyZW50U2VsZWN0aW9uRGlzcGxheV0gPSB1c2VTdGF0ZShgJHtwYXJlbnRTZWxlY3RlZH0gKyAxYCk7XG5cbiAgICAvLyBVcGRhdGUgcmVmIHdoZW4gY29uY3VycmVudE1vZGUgY2hhbmdlc1xuICAgIGNvbmN1cnJlbnRNb2RlUmVmLmN1cnJlbnQgPSBjb25jdXJyZW50TW9kZTtcblxuICAgIGNvbnN0IGhhbmRsZVNlbGVjdGVkVXBkYXRlID0gKHNlbGVjdGVkOiBudW1iZXIpID0+IHtcbiAgICAgICAgc2V0U2VsZWN0ZWQoKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm90ZTogdGhpcyBsaW5lIGlzIHdyb25nIGluIGNvbmN1cnJlbnQgbW9kZVxuICAgICAgICAgICAgc2VsZWN0ZWRSZWYuY3VycmVudCA9IHNlbGVjdGVkO1xuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbmN1cnJlbnRNb2RlUmVmLmN1cnJlbnQgPyBoYW5kbGVTZWxlY3RlZFVwZGF0ZShwYXJlbnRTZWxlY3RlZCkgOiBmbHVzaFN5bmMoKCkgPT4gaGFuZGxlU2VsZWN0ZWRVcGRhdGUocGFyZW50U2VsZWN0ZWQpKTtcbiAgICAgICAgY29uY3VycmVudE1vZGVSZWYuY3VycmVudCA/IHNldFBhcmVudFNlbGVjdGlvbkRpc3BsYXkoYCR7c2VsZWN0ZWRSZWYuY3VycmVudH0gKyAxYCkgOiBmbHVzaFN5bmMoKCkgPT4gc2V0UGFyZW50U2VsZWN0aW9uRGlzcGxheShgJHtzZWxlY3RlZFJlZi5jdXJyZW50fSArIDFgKSk7XG4gICAgfSwgW3BhcmVudFNlbGVjdGVkXSk7IC8vIHJlbW92ZWQgY29uY3VycmVudE1vZGUgZnJvbSBkZXBlbmRlbmNpZXNcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+UGFyZW50IHNlbGVjdGlvbjoge3BhcmVudFNlbGVjdGlvbkRpc3BsYXl9PC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgY29uc3QgUmVhY3RVcGdyYWRlU2FtcGxlID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgICAgICA8UGFyZW50Q29tcG9uZW50IC8+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0VXBncmFkZVNhbXBsZTtcbiJdLCJuYW1lcyI6WyJQYXJlbnRDb21wb25lbnQiLCJnZXREYXRhIiwic2V0RGF0YSIsInVzZURhdGFQcm92aWRlciIsInNlbGVjdGVkIiwic2V0U2VsZWN0ZWQiLCJ1c2VTdGF0ZSIsImpzeCIsIkNoaWxkQ29tcG9uZW50IiwicGFyZW50U2VsZWN0ZWQiLCJjb25jdXJyZW50TW9kZSIsInNlbGVjdGVkUmVmIiwidXNlUmVmIiwiY29uY3VycmVudE1vZGVSZWYiLCJfIiwicGFyZW50U2VsZWN0aW9uRGlzcGxheSIsInNldFBhcmVudFNlbGVjdGlvbkRpc3BsYXkiLCJoYW5kbGVTZWxlY3RlZFVwZGF0ZSIsInVzZUVmZmVjdCIsImZsdXNoU3luYyIsIlJlYWN0VXBncmFkZVNhbXBsZSJdLCJtYXBwaW5ncyI6ImdHQVlBLFNBQVNBLEdBQWtCLENBS2pCLEtBQUEsQ0FBRSxRQUFBQyxFQUFTLFFBQUFDLEdBQVlDLEVBQWdCLENBQUUsU0FBVSxHQUFLLEVBQW9CLEVBQzVFLENBQUNDLEVBQVVDLENBQVcsRUFBSUMsRUFBUyxTQUFBTCxFQUFBLEVBQVUsUUFBUSxFQUUzRCxjQUNLLE1BQ0csQ0FBQSxTQUFBLENBQUFNLEVBQUEsSUFBQyxTQUFBLENBQ0csUUFBUyxJQUFNLENBQ0gsUUFBQSxVQUFVLEtBQUssSUFBTSxDQUVqQkwsRUFBQSxDQUFFLFNBQVUsQ0FBQSxDQUFHLEVBRVhHLEVBQUFKLElBQVUsUUFBUSxDQUFBLENBQ2pDLENBQ0wsRUFDSCxTQUFBLGFBQUEsQ0FFRCxTQUNDLEtBQUcsQ0FBQSxTQUFBLENBQUEsZ0NBQThCLE9BQWdDLEdBQUEsRUFBQyxTQUNsRSxNQUFJLENBQUEsU0FBQSxDQUFBLGlDQUErQkEsRUFBVSxFQUFBLFFBQUEsRUFBUyxTQUN0RCxNQUFJLENBQUEsU0FBQSxDQUFBLGtDQUFnQ0csQ0FBQSxFQUFTLFNBQzdDLEtBQUcsQ0FBQSxTQUFBLENBQUEsNENBQTBDLE9BQWdDLEdBQUEsRUFBQyxRQUM5RUksRUFBZSxDQUFBLGVBQWdCUCxFQUFVLEVBQUEsU0FBVSxlQUFnQixHQUFzQixTQUN6RixLQUFHLENBQUEsU0FBQSxDQUFBLDRDQUEwQyxRQUFnQyxHQUFBLEVBQUMsRUFDOUVNLEVBQUEsSUFBQUMsRUFBQSxDQUFlLGVBQWdCSixFQUFVLGVBQWdCLEdBQXNCLENBQ3BGLENBQUEsQ0FBQSxDQUVSLENBRUEsTUFBTUksRUFBaUIsQ0FBQyxDQUFFLGVBQUFDLEVBQWdCLGVBQUFDLEtBQTJFLENBQzNHLE1BQUFDLEVBQWNDLFNBQU9ILENBQWMsRUFDbkNJLEVBQW9CRCxTQUFPRixDQUFjLEVBQ3pDLENBQUNJLEVBQUdULENBQVcsRUFBSUMsV0FBU0csQ0FBYyxFQUMxQyxDQUFDTSxFQUF3QkMsQ0FBeUIsRUFBSVYsRUFBQUEsU0FBUyxHQUFHRyxDQUFjLE1BQU0sRUFHNUZJLEVBQWtCLFFBQVVILEVBRXRCLE1BQUFPLEVBQXdCYixHQUFxQixDQUMvQ0MsRUFBWSxLQUVSTSxFQUFZLFFBQVVQLEVBQ2ZBLEVBQ1YsQ0FBQSxFQUdMYyxPQUFBQSxFQUFBQSxVQUFVLElBQU0sQ0FDTUwsRUFBQSxRQUFVSSxFQUFxQlIsQ0FBYyxFQUFJVSxFQUFBQSxVQUFVLElBQU1GLEVBQXFCUixDQUFjLENBQUMsRUFDdkhJLEVBQWtCLFFBQVVHLEVBQTBCLEdBQUdMLEVBQVksT0FBTyxNQUFNLEVBQUlRLEVBQUFBLFVBQVUsSUFBTUgsRUFBMEIsR0FBR0wsRUFBWSxPQUFPLE1BQU0sQ0FBQyxDQUFBLEVBQzlKLENBQUNGLENBQWMsQ0FBQyxTQUdkLE1BQUksQ0FBQSxTQUFBLENBQUEscUJBQW1CTSxDQUF1QixDQUFBLENBQUEsQ0FFdkQsRUFFYUssRUFBcUIsVUFFckJwQixFQUFnQixDQUFBLENBQUEifQ==
