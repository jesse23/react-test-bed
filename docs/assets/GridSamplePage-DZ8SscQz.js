import{R as be,r as I,j as O}from"./index-BK2RadcX.js";var T=function(){return T=Object.assign||function(t){for(var n,r=1,a=arguments.length;r<a;r++){n=arguments[r];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(t[s]=n[s])}return t},T.apply(this,arguments)};function Ie(e,t,n){if(n||arguments.length===2)for(var r=0,a=t.length,s;r<a;r++)(s||!(r in t))&&(s||(s=Array.prototype.slice.call(t,0,r)),s[r]=t[r]);return e.concat(s||Array.prototype.slice.call(t))}var _="-ms-",ye="-moz-",A="-webkit-",Ft="comm",Pe="rule",nt="decl",Vt="@import",Nt="@keyframes",en="@layer",$t=Math.abs,rt=String.fromCharCode,Je=Object.assign;function tn(e,t){return R(e,0)^45?(((t<<2^R(e,0))<<2^R(e,1))<<2^R(e,2))<<2^R(e,3):0}function It(e){return e.trim()}function Z(e,t){return(e=t.exec(e))?e[0]:e}function b(e,t,n){return e.replace(t,n)}function Ee(e,t,n){return e.indexOf(t,n)}function R(e,t){return e.charCodeAt(t)|0}function ce(e,t,n){return e.slice(t,n)}function W(e){return e.length}function Rt(e){return e.length}function me(e,t){return t.push(e),e}function nn(e,t){return e.map(t).join("")}function ct(e,t){return e.filter(function(n){return!Z(n,t)})}var Oe=1,le=1,Tt=0,D=0,$=0,fe="";function Le(e,t,n,r,a,s,u,d){return{value:e,root:t,parent:n,type:r,props:a,children:s,line:Oe,column:le,length:u,return:"",siblings:d}}function X(e,t){return Je(Le("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},t)}function ae(e){for(;e.root;)e=X(e.root,{children:[e]});me(e,e.siblings)}function rn(){return $}function sn(){return $=D>0?R(fe,--D):0,le--,$===10&&(le=1,Oe--),$}function M(){return $=D<Tt?R(fe,D++):0,le++,$===10&&(le=1,Oe++),$}function te(){return R(fe,D)}function _e(){return D}function ze(e,t){return ce(fe,e,t)}function Ke(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function an(e){return Oe=le=1,Tt=W(fe=e),D=0,[]}function on(e){return fe="",e}function We(e){return It(ze(D-1,Xe(e===91?e+2:e===40?e+1:e)))}function cn(e){for(;($=te())&&$<33;)M();return Ke(e)>2||Ke($)>3?"":" "}function ln(e,t){for(;--t&&M()&&!($<48||$>102||$>57&&$<65||$>70&&$<97););return ze(e,_e()+(t<6&&te()==32&&M()==32))}function Xe(e){for(;M();)switch($){case e:return D;case 34:case 39:e!==34&&e!==39&&Xe($);break;case 40:e===41&&Xe(e);break;case 92:M();break}return D}function un(e,t){for(;M()&&e+$!==57;)if(e+$===84&&te()===47)break;return"/*"+ze(t,D-1)+"*"+rt(e===47?e:M())}function dn(e){for(;!Ke(te());)M();return ze(e,D)}function pn(e){return on(Fe("",null,null,null,[""],e=an(e),0,[0],e))}function Fe(e,t,n,r,a,s,u,d,o){for(var i=0,l=0,c=u,p=0,h=0,f=0,g=1,v=1,w=1,m=0,x="",S=a,C=s,k=r,y=x;v;)switch(f=m,m=M()){case 40:if(f!=108&&R(y,c-1)==58){Ee(y+=b(We(m),"&","&\f"),"&\f",$t(i?d[i-1]:0))!=-1&&(w=-1);break}case 34:case 39:case 91:y+=We(m);break;case 9:case 10:case 13:case 32:y+=cn(f);break;case 92:y+=ln(_e()-1,7);continue;case 47:switch(te()){case 42:case 47:me(fn(un(M(),_e()),t,n,o),o);break;default:y+="/"}break;case 123*g:d[i++]=W(y)*w;case 125*g:case 59:case 0:switch(m){case 0:case 125:v=0;case 59+l:w==-1&&(y=b(y,/\f/g,"")),h>0&&W(y)-c&&me(h>32?ut(y+";",r,n,c-1,o):ut(b(y," ","")+";",r,n,c-2,o),o);break;case 59:y+=";";default:if(me(k=lt(y,t,n,i,l,a,d,x,S=[],C=[],c,s),s),m===123)if(l===0)Fe(y,t,k,k,S,s,c,d,C);else switch(p===99&&R(y,3)===110?100:p){case 100:case 108:case 109:case 115:Fe(e,k,k,r&&me(lt(e,k,k,0,0,a,d,x,a,S=[],c,C),C),a,C,c,d,r?S:C);break;default:Fe(y,k,k,k,[""],C,0,d,C)}}i=l=h=0,g=w=1,x=y="",c=u;break;case 58:c=1+W(y),h=f;default:if(g<1){if(m==123)--g;else if(m==125&&g++==0&&sn()==125)continue}switch(y+=rt(m),m*g){case 38:w=l>0?1:(y+="\f",-1);break;case 44:d[i++]=(W(y)-1)*w,w=1;break;case 64:te()===45&&(y+=We(M())),p=te(),l=c=W(x=y+=dn(_e())),m++;break;case 45:f===45&&W(y)==2&&(g=0)}}return s}function lt(e,t,n,r,a,s,u,d,o,i,l,c){for(var p=a-1,h=a===0?s:[""],f=Rt(h),g=0,v=0,w=0;g<r;++g)for(var m=0,x=ce(e,p+1,p=$t(v=u[g])),S=e;m<f;++m)(S=It(v>0?h[m]+" "+x:b(x,/&\f/g,h[m])))&&(o[w++]=S);return Le(e,t,n,a===0?Pe:d,o,i,l,c)}function fn(e,t,n,r){return Le(e,t,n,Ft,rt(rn()),ce(e,2,-2),0,r)}function ut(e,t,n,r,a){return Le(e,t,n,nt,ce(e,0,r),ce(e,r+1,-1),r,a)}function jt(e,t,n){switch(tn(e,t)){case 5103:return A+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return A+e+e;case 4789:return ye+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return A+e+ye+e+_+e+e;case 5936:switch(R(e,t+11)){case 114:return A+e+_+b(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return A+e+_+b(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return A+e+_+b(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return A+e+_+e+e;case 6165:return A+e+_+"flex-"+e+e;case 5187:return A+e+b(e,/(\w+).+(:[^]+)/,A+"box-$1$2"+_+"flex-$1$2")+e;case 5443:return A+e+_+"flex-item-"+b(e,/flex-|-self/g,"")+(Z(e,/flex-|baseline/)?"":_+"grid-row-"+b(e,/flex-|-self/g,""))+e;case 4675:return A+e+_+"flex-line-pack"+b(e,/align-content|flex-|-self/g,"")+e;case 5548:return A+e+_+b(e,"shrink","negative")+e;case 5292:return A+e+_+b(e,"basis","preferred-size")+e;case 6060:return A+"box-"+b(e,"-grow","")+A+e+_+b(e,"grow","positive")+e;case 4554:return A+b(e,/([^-])(transform)/g,"$1"+A+"$2")+e;case 6187:return b(b(b(e,/(zoom-|grab)/,A+"$1"),/(image-set)/,A+"$1"),e,"")+e;case 5495:case 3959:return b(e,/(image-set\([^]*)/,A+"$1$`$1");case 4968:return b(b(e,/(.+:)(flex-)?(.*)/,A+"box-pack:$3"+_+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+A+e+e;case 4200:if(!Z(e,/flex-|baseline/))return _+"grid-column-align"+ce(e,t)+e;break;case 2592:case 3360:return _+b(e,"template-","")+e;case 4384:case 3616:return n&&n.some(function(r,a){return t=a,Z(r.props,/grid-\w+-end/)})?~Ee(e+(n=n[t].value),"span",0)?e:_+b(e,"-start","")+e+_+"grid-row-span:"+(~Ee(n,"span",0)?Z(n,/\d+/):+Z(n,/\d+/)-+Z(e,/\d+/))+";":_+b(e,"-start","")+e;case 4896:case 4128:return n&&n.some(function(r){return Z(r.props,/grid-\w+-start/)})?e:_+b(b(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return b(e,/(.+)-inline(.+)/,A+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(W(e)-1-t>6)switch(R(e,t+1)){case 109:if(R(e,t+4)!==45)break;case 102:return b(e,/(.+:)(.+)-([^]+)/,"$1"+A+"$2-$3$1"+ye+(R(e,t+3)==108?"$3":"$2-$3"))+e;case 115:return~Ee(e,"stretch",0)?jt(b(e,"stretch","fill-available"),t,n)+e:e}break;case 5152:case 5920:return b(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,function(r,a,s,u,d,o,i){return _+a+":"+s+i+(u?_+a+"-span:"+(d?o:+o-+s)+i:"")+e});case 4949:if(R(e,t+6)===121)return b(e,":",":"+A)+e;break;case 6444:switch(R(e,R(e,14)===45?18:11)){case 120:return b(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+A+(R(e,14)===45?"inline-":"")+"box$3$1"+A+"$2$3$1"+_+"$2box$3")+e;case 100:return b(e,":",":"+_)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return b(e,"scroll-","scroll-snap-")+e}return e}function Re(e,t){for(var n="",r=0;r<e.length;r++)n+=t(e[r],r,e,t)||"";return n}function hn(e,t,n,r){switch(e.type){case en:if(e.children.length)break;case Vt:case nt:return e.return=e.return||e.value;case Ft:return"";case Nt:return e.return=e.value+"{"+Re(e.children,r)+"}";case Pe:if(!W(e.value=e.props.join(",")))return""}return W(n=Re(e.children,r))?e.return=e.value+"{"+n+"}":""}function gn(e){var t=Rt(e);return function(n,r,a,s){for(var u="",d=0;d<t;d++)u+=e[d](n,r,a,s)||"";return u}}function mn(e){return function(t){t.root||(t=t.return)&&e(t)}}function yn(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case nt:e.return=jt(e.value,e.length,n);return;case Nt:return Re([X(e,{value:b(e.value,"@","@"+A)})],r);case Pe:if(e.length)return nn(n=e.props,function(a){switch(Z(a,r=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":ae(X(e,{props:[b(a,/:(read-\w+)/,":"+ye+"$1")]})),ae(X(e,{props:[a]})),Je(e,{props:ct(n,r)});break;case"::placeholder":ae(X(e,{props:[b(a,/:(plac\w+)/,":"+A+"input-$1")]})),ae(X(e,{props:[b(a,/:(plac\w+)/,":"+ye+"$1")]})),ae(X(e,{props:[b(a,/:(plac\w+)/,_+"input-$1")]})),ae(X(e,{props:[a]})),Je(e,{props:ct(n,r)});break}return""})}}var bn={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},P={},ue=typeof process<"u"&&P!==void 0&&(P.REACT_APP_SC_ATTR||P.SC_ATTR)||"data-styled",Pt="active",Ot="data-styled-version",De="6.1.12",st=`/*!sc*/
`,Te=typeof window<"u"&&"HTMLElement"in window,vn=!!(typeof SC_DISABLE_SPEEDY=="boolean"?SC_DISABLE_SPEEDY:typeof process<"u"&&P!==void 0&&P.REACT_APP_SC_DISABLE_SPEEDY!==void 0&&P.REACT_APP_SC_DISABLE_SPEEDY!==""?P.REACT_APP_SC_DISABLE_SPEEDY!=="false"&&P.REACT_APP_SC_DISABLE_SPEEDY:typeof process<"u"&&P!==void 0&&P.SC_DISABLE_SPEEDY!==void 0&&P.SC_DISABLE_SPEEDY!==""&&P.SC_DISABLE_SPEEDY!=="false"&&P.SC_DISABLE_SPEEDY),Me=Object.freeze([]),de=Object.freeze({});function wn(e,t,n){return n===void 0&&(n=de),e.theme!==n.theme&&e.theme||t||n.theme}var Lt=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),kn=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,xn=/(^-|-$)/g;function dt(e){return e.replace(kn,"-").replace(xn,"")}var Sn=/(a)(d)/gi,Ce=52,pt=function(e){return String.fromCharCode(e+(e>25?39:97))};function Qe(e){var t,n="";for(t=Math.abs(e);t>Ce;t=t/Ce|0)n=pt(t%Ce)+n;return(pt(t%Ce)+n).replace(Sn,"$1-$2")}var Ue,zt=5381,ie=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},Dt=function(e){return ie(zt,e)};function Cn(e){return Qe(Dt(e)>>>0)}function An(e){return e.displayName||e.name||"Component"}function Ye(e){return typeof e=="string"&&!0}var Mt=typeof Symbol=="function"&&Symbol.for,Bt=Mt?Symbol.for("react.memo"):60115,En=Mt?Symbol.for("react.forward_ref"):60112,_n={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},Fn={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Ht={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Nn=((Ue={})[En]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Ue[Bt]=Ht,Ue);function ft(e){return("type"in(t=e)&&t.type.$$typeof)===Bt?Ht:"$$typeof"in e?Nn[e.$$typeof]:_n;var t}var $n=Object.defineProperty,In=Object.getOwnPropertyNames,ht=Object.getOwnPropertySymbols,Rn=Object.getOwnPropertyDescriptor,Tn=Object.getPrototypeOf,gt=Object.prototype;function Gt(e,t,n){if(typeof t!="string"){if(gt){var r=Tn(t);r&&r!==gt&&Gt(e,r,n)}var a=In(t);ht&&(a=a.concat(ht(t)));for(var s=ft(e),u=ft(t),d=0;d<a.length;++d){var o=a[d];if(!(o in Fn||n&&n[o]||u&&o in u||s&&o in s)){var i=Rn(t,o);try{$n(e,o,i)}catch{}}}}return e}function pe(e){return typeof e=="function"}function at(e){return typeof e=="object"&&"styledComponentId"in e}function ee(e,t){return e&&t?"".concat(e," ").concat(t):e||t||""}function mt(e,t){if(e.length===0)return"";for(var n=e[0],r=1;r<e.length;r++)n+=e[r];return n}function ve(e){return e!==null&&typeof e=="object"&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function Ve(e,t,n){if(n===void 0&&(n=!1),!n&&!ve(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=Ve(e[r],t[r]);else if(ve(t))for(var r in t)e[r]=Ve(e[r],t[r]);return e}function ot(e,t){Object.defineProperty(e,"toString",{value:t})}function we(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e," for more information.").concat(t.length>0?" Args: ".concat(t.join(", ")):""))}var jn=function(){function e(t){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=t}return e.prototype.indexOfGroup=function(t){for(var n=0,r=0;r<t;r++)n+=this.groupSizes[r];return n},e.prototype.insertRules=function(t,n){if(t>=this.groupSizes.length){for(var r=this.groupSizes,a=r.length,s=a;t>=s;)if((s<<=1)<0)throw we(16,"".concat(t));this.groupSizes=new Uint32Array(s),this.groupSizes.set(r),this.length=s;for(var u=a;u<s;u++)this.groupSizes[u]=0}for(var d=this.indexOfGroup(t+1),o=(u=0,n.length);u<o;u++)this.tag.insertRule(d,n[u])&&(this.groupSizes[t]++,d++)},e.prototype.clearGroup=function(t){if(t<this.length){var n=this.groupSizes[t],r=this.indexOfGroup(t),a=r+n;this.groupSizes[t]=0;for(var s=r;s<a;s++)this.tag.deleteRule(r)}},e.prototype.getGroup=function(t){var n="";if(t>=this.length||this.groupSizes[t]===0)return n;for(var r=this.groupSizes[t],a=this.indexOfGroup(t),s=a+r,u=a;u<s;u++)n+="".concat(this.tag.getRule(u)).concat(st);return n},e}(),Ne=new Map,je=new Map,$e=1,Ae=function(e){if(Ne.has(e))return Ne.get(e);for(;je.has($e);)$e++;var t=$e++;return Ne.set(e,t),je.set(t,e),t},Pn=function(e,t){$e=t+1,Ne.set(e,t),je.set(t,e)},On="style[".concat(ue,"][").concat(Ot,'="').concat(De,'"]'),Ln=new RegExp("^".concat(ue,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),zn=function(e,t,n){for(var r,a=n.split(","),s=0,u=a.length;s<u;s++)(r=a[s])&&e.registerName(t,r)},Dn=function(e,t){for(var n,r=((n=t.textContent)!==null&&n!==void 0?n:"").split(st),a=[],s=0,u=r.length;s<u;s++){var d=r[s].trim();if(d){var o=d.match(Ln);if(o){var i=0|parseInt(o[1],10),l=o[2];i!==0&&(Pn(l,i),zn(e,l,o[3]),e.getTag().insertRules(i,a)),a.length=0}else a.push(d)}}},yt=function(e){for(var t=document.querySelectorAll(On),n=0,r=t.length;n<r;n++){var a=t[n];a&&a.getAttribute(ue)!==Pt&&(Dn(e,a),a.parentNode&&a.parentNode.removeChild(a))}};function Mn(){return typeof __webpack_nonce__<"u"?__webpack_nonce__:null}var Wt=function(e){var t=document.head,n=e||t,r=document.createElement("style"),a=function(d){var o=Array.from(d.querySelectorAll("style[".concat(ue,"]")));return o[o.length-1]}(n),s=a!==void 0?a.nextSibling:null;r.setAttribute(ue,Pt),r.setAttribute(Ot,De);var u=Mn();return u&&r.setAttribute("nonce",u),n.insertBefore(r,s),r},Bn=function(){function e(t){this.element=Wt(t),this.element.appendChild(document.createTextNode("")),this.sheet=function(n){if(n.sheet)return n.sheet;for(var r=document.styleSheets,a=0,s=r.length;a<s;a++){var u=r[a];if(u.ownerNode===n)return u}throw we(17)}(this.element),this.length=0}return e.prototype.insertRule=function(t,n){try{return this.sheet.insertRule(n,t),this.length++,!0}catch{return!1}},e.prototype.deleteRule=function(t){this.sheet.deleteRule(t),this.length--},e.prototype.getRule=function(t){var n=this.sheet.cssRules[t];return n&&n.cssText?n.cssText:""},e}(),Hn=function(){function e(t){this.element=Wt(t),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(t,n){if(t<=this.length&&t>=0){var r=document.createTextNode(n);return this.element.insertBefore(r,this.nodes[t]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(t){this.element.removeChild(this.nodes[t]),this.length--},e.prototype.getRule=function(t){return t<this.length?this.nodes[t].textContent:""},e}(),Gn=function(){function e(t){this.rules=[],this.length=0}return e.prototype.insertRule=function(t,n){return t<=this.length&&(this.rules.splice(t,0,n),this.length++,!0)},e.prototype.deleteRule=function(t){this.rules.splice(t,1),this.length--},e.prototype.getRule=function(t){return t<this.length?this.rules[t]:""},e}(),bt=Te,Wn={isServer:!Te,useCSSOMInjection:!vn},Ut=function(){function e(t,n,r){t===void 0&&(t=de),n===void 0&&(n={});var a=this;this.options=T(T({},Wn),t),this.gs=n,this.names=new Map(r),this.server=!!t.isServer,!this.server&&Te&&bt&&(bt=!1,yt(this)),ot(this,function(){return function(s){for(var u=s.getTag(),d=u.length,o="",i=function(c){var p=function(w){return je.get(w)}(c);if(p===void 0)return"continue";var h=s.names.get(p),f=u.getGroup(c);if(h===void 0||!h.size||f.length===0)return"continue";var g="".concat(ue,".g").concat(c,'[id="').concat(p,'"]'),v="";h!==void 0&&h.forEach(function(w){w.length>0&&(v+="".concat(w,","))}),o+="".concat(f).concat(g,'{content:"').concat(v,'"}').concat(st)},l=0;l<d;l++)i(l);return o}(a)})}return e.registerId=function(t){return Ae(t)},e.prototype.rehydrate=function(){!this.server&&Te&&yt(this)},e.prototype.reconstructWithOptions=function(t,n){return n===void 0&&(n=!0),new e(T(T({},this.options),t),this.gs,n&&this.names||void 0)},e.prototype.allocateGSInstance=function(t){return this.gs[t]=(this.gs[t]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(t=function(n){var r=n.useCSSOMInjection,a=n.target;return n.isServer?new Gn(a):r?new Bn(a):new Hn(a)}(this.options),new jn(t)));var t},e.prototype.hasNameForId=function(t,n){return this.names.has(t)&&this.names.get(t).has(n)},e.prototype.registerName=function(t,n){if(Ae(t),this.names.has(t))this.names.get(t).add(n);else{var r=new Set;r.add(n),this.names.set(t,r)}},e.prototype.insertRules=function(t,n,r){this.registerName(t,n),this.getTag().insertRules(Ae(t),r)},e.prototype.clearNames=function(t){this.names.has(t)&&this.names.get(t).clear()},e.prototype.clearRules=function(t){this.getTag().clearGroup(Ae(t)),this.clearNames(t)},e.prototype.clearTag=function(){this.tag=void 0},e}(),Un=/&/g,Yn=/^\s*\/\/.*$/gm;function Yt(e,t){return e.map(function(n){return n.type==="rule"&&(n.value="".concat(t," ").concat(n.value),n.value=n.value.replaceAll(",",",".concat(t," ")),n.props=n.props.map(function(r){return"".concat(t," ").concat(r)})),Array.isArray(n.children)&&n.type!=="@keyframes"&&(n.children=Yt(n.children,t)),n})}function qn(e){var t,n,r,a=de,s=a.options,u=s===void 0?de:s,d=a.plugins,o=d===void 0?Me:d,i=function(p,h,f){return f.startsWith(n)&&f.endsWith(n)&&f.replaceAll(n,"").length>0?".".concat(t):p},l=o.slice();l.push(function(p){p.type===Pe&&p.value.includes("&")&&(p.props[0]=p.props[0].replace(Un,n).replace(r,i))}),u.prefix&&l.push(yn),l.push(hn);var c=function(p,h,f,g){h===void 0&&(h=""),f===void 0&&(f=""),g===void 0&&(g="&"),t=g,n=h,r=new RegExp("\\".concat(n,"\\b"),"g");var v=p.replace(Yn,""),w=pn(f||h?"".concat(f," ").concat(h," { ").concat(v," }"):v);u.namespace&&(w=Yt(w,u.namespace));var m=[];return Re(w,gn(l.concat(mn(function(x){return m.push(x)})))),m};return c.hash=o.length?o.reduce(function(p,h){return h.name||we(15),ie(p,h.name)},zt).toString():"",c}var Zn=new Ut,et=qn(),qt=be.createContext({shouldForwardProp:void 0,styleSheet:Zn,stylis:et});qt.Consumer;be.createContext(void 0);function vt(){return I.useContext(qt)}var Jn=function(){function e(t,n){var r=this;this.inject=function(a,s){s===void 0&&(s=et);var u=r.name+s.hash;a.hasNameForId(r.id,u)||a.insertRules(r.id,u,s(r.rules,u,"@keyframes"))},this.name=t,this.id="sc-keyframes-".concat(t),this.rules=n,ot(this,function(){throw we(12,String(r.name))})}return e.prototype.getName=function(t){return t===void 0&&(t=et),this.name+t.hash},e}(),Kn=function(e){return e>="A"&&e<="Z"};function wt(e){for(var t="",n=0;n<e.length;n++){var r=e[n];if(n===1&&r==="-"&&e[0]==="-")return e;Kn(r)?t+="-"+r.toLowerCase():t+=r}return t.startsWith("ms-")?"-"+t:t}var Zt=function(e){return e==null||e===!1||e===""},Jt=function(e){var t,n,r=[];for(var a in e){var s=e[a];e.hasOwnProperty(a)&&!Zt(s)&&(Array.isArray(s)&&s.isCss||pe(s)?r.push("".concat(wt(a),":"),s,";"):ve(s)?r.push.apply(r,Ie(Ie(["".concat(a," {")],Jt(s),!1),["}"],!1)):r.push("".concat(wt(a),": ").concat((t=a,(n=s)==null||typeof n=="boolean"||n===""?"":typeof n!="number"||n===0||t in bn||t.startsWith("--")?String(n).trim():"".concat(n,"px")),";")))}return r};function ne(e,t,n,r){if(Zt(e))return[];if(at(e))return[".".concat(e.styledComponentId)];if(pe(e)){if(!pe(s=e)||s.prototype&&s.prototype.isReactComponent||!t)return[e];var a=e(t);return ne(a,t,n,r)}var s;return e instanceof Jn?n?(e.inject(n,r),[e.getName(r)]):[e]:ve(e)?Jt(e):Array.isArray(e)?Array.prototype.concat.apply(Me,e.map(function(u){return ne(u,t,n,r)})):[e.toString()]}function Xn(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(pe(n)&&!at(n))return!1}return!0}var Qn=Dt(De),Vn=function(){function e(t,n,r){this.rules=t,this.staticRulesId="",this.isStatic=(r===void 0||r.isStatic)&&Xn(t),this.componentId=n,this.baseHash=ie(Qn,n),this.baseStyle=r,Ut.registerId(n)}return e.prototype.generateAndInjectStyles=function(t,n,r){var a=this.baseStyle?this.baseStyle.generateAndInjectStyles(t,n,r):"";if(this.isStatic&&!r.hash)if(this.staticRulesId&&n.hasNameForId(this.componentId,this.staticRulesId))a=ee(a,this.staticRulesId);else{var s=mt(ne(this.rules,t,n,r)),u=Qe(ie(this.baseHash,s)>>>0);if(!n.hasNameForId(this.componentId,u)){var d=r(s,".".concat(u),void 0,this.componentId);n.insertRules(this.componentId,u,d)}a=ee(a,u),this.staticRulesId=u}else{for(var o=ie(this.baseHash,r.hash),i="",l=0;l<this.rules.length;l++){var c=this.rules[l];if(typeof c=="string")i+=c;else if(c){var p=mt(ne(c,t,n,r));o=ie(o,p+l),i+=p}}if(i){var h=Qe(o>>>0);n.hasNameForId(this.componentId,h)||n.insertRules(this.componentId,h,r(i,".".concat(h),void 0,this.componentId)),a=ee(a,h)}}return a},e}(),Kt=be.createContext(void 0);Kt.Consumer;var qe={};function er(e,t,n){var r=at(e),a=e,s=!Ye(e),u=t.attrs,d=u===void 0?Me:u,o=t.componentId,i=o===void 0?function(S,C){var k=typeof S!="string"?"sc":dt(S);qe[k]=(qe[k]||0)+1;var y="".concat(k,"-").concat(Cn(De+k+qe[k]));return C?"".concat(C,"-").concat(y):y}(t.displayName,t.parentComponentId):o,l=t.displayName,c=l===void 0?function(S){return Ye(S)?"styled.".concat(S):"Styled(".concat(An(S),")")}(e):l,p=t.displayName&&t.componentId?"".concat(dt(t.displayName),"-").concat(t.componentId):t.componentId||i,h=r&&a.attrs?a.attrs.concat(d).filter(Boolean):d,f=t.shouldForwardProp;if(r&&a.shouldForwardProp){var g=a.shouldForwardProp;if(t.shouldForwardProp){var v=t.shouldForwardProp;f=function(S,C){return g(S,C)&&v(S,C)}}else f=g}var w=new Vn(n,p,r?a.componentStyle:void 0);function m(S,C){return function(k,y,B){var N=k.attrs,L=k.componentStyle,U=k.defaultProps,Y=k.foldedComponentIds,J=k.styledComponentId,z=k.target,q=be.useContext(Kt),re=vt(),F=k.shouldForwardProp||re.shouldForwardProp,se=wn(y,q,U)||de,j=function(ke,he,xe){for(var ge,V=T(T({},he),{className:void 0,theme:xe}),Ge=0;Ge<ke.length;Ge+=1){var Se=pe(ge=ke[Ge])?ge(V):ge;for(var K in Se)V[K]=K==="className"?ee(V[K],Se[K]):K==="style"?T(T({},V[K]),Se[K]):Se[K]}return he.className&&(V.className=ee(V.className,he.className)),V}(N,y,se),Q=j.as||z,H={};for(var G in j)j[G]===void 0||G[0]==="$"||G==="as"||G==="theme"&&j.theme===se||(G==="forwardedAs"?H.as=j.forwardedAs:F&&!F(G,Q)||(H[G]=j[G]));var it=function(ke,he){var xe=vt(),ge=ke.generateAndInjectStyles(he,xe.styleSheet,xe.stylis);return ge}(L,j),He=ee(Y,J);return it&&(He+=" "+it),j.className&&(He+=" "+j.className),H[Ye(Q)&&!Lt.has(Q)?"class":"className"]=He,H.ref=B,I.createElement(Q,H)}(x,S,C)}m.displayName=c;var x=be.forwardRef(m);return x.attrs=h,x.componentStyle=w,x.displayName=c,x.shouldForwardProp=f,x.foldedComponentIds=r?ee(a.foldedComponentIds,a.styledComponentId):"",x.styledComponentId=p,x.target=r?a.target:e,Object.defineProperty(x,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(S){this._foldedDefaultProps=r?function(C){for(var k=[],y=1;y<arguments.length;y++)k[y-1]=arguments[y];for(var B=0,N=k;B<N.length;B++)Ve(C,N[B],!0);return C}({},a.defaultProps,S):S}}),ot(x,function(){return".".concat(x.styledComponentId)}),s&&Gt(x,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),x}function kt(e,t){for(var n=[e[0]],r=0,a=t.length;r<a;r+=1)n.push(t[r],e[r+1]);return n}var xt=function(e){return Object.assign(e,{isCss:!0})};function tr(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(pe(e)||ve(e))return xt(ne(kt(Me,Ie([e],t,!0))));var r=e;return t.length===0&&r.length===1&&typeof r[0]=="string"?ne(r):xt(ne(kt(r,t)))}function tt(e,t,n){if(n===void 0&&(n=de),!t)throw we(1,t);var r=function(a){for(var s=[],u=1;u<arguments.length;u++)s[u-1]=arguments[u];return e(t,n,tr.apply(void 0,Ie([a],s,!1)))};return r.attrs=function(a){return tt(e,t,T(T({},n),{attrs:Array.prototype.concat(n.attrs,a).filter(Boolean)}))},r.withConfig=function(a){return tt(e,t,T(T({},n),a))},r}var Xt=function(e){return tt(er,e)},Be=Xt;Lt.forEach(function(e){Be[e]=Xt(e)});function nr(e,t){let n;return function(...r){n&&clearTimeout(n),n=setTimeout(()=>e(...r),t)}}const rr=Be.div`
  display: grid;
  height: 100%;
  grid-template-columns: repeat(${e=>e.itemCols}, 1fr);
`,sr=Be.div`
  display: flex;
  position: relative;
  grid-row: span ${e=>e.rowSpan};
  grid-column: span ${e=>Math.min(e.colSpan,e.itemCols)};
  aspect-ratio: ${e=>e.colSpan*e.itemAspectRatio/e.rowSpan};
`,ar=Be.div`
  display: flex;
  width: 100%;
  height: 100%;
  background-color: #ccc;
`,or=({itemMaxWidth:e,itemAspectRatio:t,layout:n})=>{const r=I.useRef(null),[a,s]=I.useState(1),[u,d]=n?Object.entries(n)[0]:[0,[]],[o,i]=I.useState(Number(u)),[l,c]=I.useState({});I.useEffect(()=>{const g={};d.forEach((v,w)=>{v.forEach((m,x)=>{if(m&&!g[m]){const S=v.filter(k=>k===m).length,C=d.filter(k=>k[x]===m).length;g[m]={rowStart:w+1,colStart:x+1,rowSpan:C,colSpan:S}}})}),c(g)},[d]);const p=I.useCallback(g=>{var v,w,m,x,S;for(let C of g)if(console.log(C),C.contentBoxSize){const{inlineSize:k}=C.contentBoxSize[0]||C.contentBoxSize;console.log("containerWidth",k);const y=((v=C.contentBoxSize[1])==null?void 0:v.blockSize)||C.contentRect.height;console.log("containerHeight",y);const B=k,N=y,L=((w=r.current)==null?void 0:w.scrollHeight)||0,U=((m=r.current)==null?void 0:m.clientHeight)||0;console.log("clientHeight",U),console.log("ParentClientHeight",(S=(x=r.current)==null?void 0:x.parentElement)==null?void 0:S.clientHeight),console.log("scrollHeight",L);const Y=Math.floor(B/e),J=B/Y;console.log("cellWidth",J);const z=J/t;console.log("cellHeight",z);const q=Math.round(N/z);console.log("rowCount",q);const re=N/q;console.log("projectCellHeight",re);const F=z/re;s(F),console.log("colCount",Y),i(Y)}},[e,t]),h=I.useCallback(nr(p,100),[p]),f=[];return I.useEffect(()=>{const g=new ResizeObserver(h);return r.current&&g.observe(r.current),()=>{r.current&&g.unobserve(r.current)}},[h]),Object.entries(l).forEach(([g,{rowStart:v,colStart:w,rowSpan:m,colSpan:x}])=>{const S=`${g}-${v}-${w}`;f.push(O.jsx(sr,{colSpan:x,rowSpan:m,itemCols:o,itemMaxWidth:e,itemAspectRatio:t*a,children:O.jsx("div",{style:{display:"flex",margin:"10px",flexDirection:"column",width:"100%"},children:O.jsx(ar,{children:O.jsx("span",{style:{position:"absolute",fontSize:"36px",margin:"20px"},children:g})})})},S))}),O.jsx(rr,{itemMaxWidth:e,itemCols:o,ref:r,children:f})};var Qt="#fff",Ze="20px",ir="13px",cr=`
.codeflask {
  background: `+Qt+`;
  color: #4f559c;
}

.codeflask .token.punctuation {
  color: #4a4a4a;
}

.codeflask .token.keyword {
  color: #8500ff;
}

.codeflask .token.operator {
  color: #ff5598;
}

.codeflask .token.string {
  color: #41ad8f;
}

.codeflask .token.comment {
  color: #9badb7;
}

.codeflask .token.function {
  color: #8500ff;
}

.codeflask .token.boolean {
  color: #8500ff;
}

.codeflask .token.number {
  color: #8500ff;
}

.codeflask .token.selector {
  color: #8500ff;
}

.codeflask .token.property {
  color: #8500ff;
}

.codeflask .token.tag {
  color: #8500ff;
}

.codeflask .token.attr-value {
  color: #8500ff;
}
`;function lr(e,t){return typeof CSS<"u"?CSS.supports(e,t):typeof document<"u"&&ur(e)in document.body.style}function ur(e){return(e=e.split("-").filter(function(t){return!!t}).map(function(t){return t[0].toUpperCase()+t.substr(1)}).join(""))[0].toLowerCase()+e.substr(1)}var St='"SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace',dr=lr("caret-color","#000")?Qt:"#ccc",oe="40px",pr=`
  .codeflask {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .codeflask, .codeflask * {
    box-sizing: border-box;
  }

  .codeflask__pre {
    pointer-events: none;
    z-index: 3;
    overflow: hidden;
  }

  .codeflask__textarea {
    background: none;
    border: none;
    color: `+dr+`;
    z-index: 1;
    resize: none;
    font-family: `+St+`;
    -webkit-appearance: pre;
    caret-color: #111;
    z-index: 2;
    width: 100%;
    height: 100%;
  }

  .codeflask--has-line-numbers .codeflask__textarea {
    width: calc(100% - `+oe+`);
  }

  .codeflask__code {
    display: block;
    font-family: `+St+`;
    overflow: hidden;
  }

  .codeflask__flatten {
    padding: 10px;
    font-size: `+ir+`;
    line-height: `+Ze+`;
    white-space: pre;
    position: absolute;
    top: 0;
    left: 0;
    overflow: auto;
    margin: 0 !important;
    outline: none;
    text-align: left;
  }

  .codeflask--has-line-numbers .codeflask__flatten {
    width: calc(100% - `+oe+`);
    left: `+oe+`;
  }

  .codeflask__line-highlight {
    position: absolute;
    top: 10px;
    left: 0;
    width: 100%;
    height: `+Ze+`;
    background: rgba(0,0,0,0.1);
    z-index: 1;
  }

  .codeflask__lines {
    padding: 10px 4px;
    font-size: 12px;
    line-height: `+Ze+`;
    font-family: 'Cousine', monospace;
    position: absolute;
    left: 0;
    top: 0;
    width: `+oe+`;
    height: 100%;
    text-align: right;
    color: #999;
    z-index: 2;
  }

  .codeflask__lines__line {
    display: block;
  }

  .codeflask.codeflask--has-line-numbers {
    padding-left: `+oe+`;
  }

  .codeflask.codeflask--has-line-numbers:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: `+oe+`;
    height: 100%;
    background: #eee;
    z-index: 1;
  }
`;function Ct(e,t,n){var r=t||"codeflask-style",a=n||document.head;if(!e)return!1;if(document.getElementById(r))return!0;var s=document.createElement("style");return s.innerHTML=e,s.id=r,a.appendChild(s),!0}var fr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};function At(e){return String(e).replace(/[&<>"'`=/]/g,function(t){return fr[t]})}var Et=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function hr(e,t){return e(t={exports:{}},t.exports),t.exports}var _t=hr(function(e){var t=function(n){var r=/\blang(?:uage)?-([\w-]+)\b/i,a=0,s={manual:n.Prism&&n.Prism.manual,disableWorkerMessageHandler:n.Prism&&n.Prism.disableWorkerMessageHandler,util:{encode:function(o){return o instanceof u?new u(o.type,s.util.encode(o.content),o.alias):Array.isArray(o)?o.map(s.util.encode):o.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(o){return Object.prototype.toString.call(o).slice(8,-1)},objId:function(o){return o.__id||Object.defineProperty(o,"__id",{value:++a}),o.__id},clone:function o(i,l){var c,p,h=s.util.type(i);switch(l=l||{},h){case"Object":if(p=s.util.objId(i),l[p])return l[p];for(var f in c={},l[p]=c,i)i.hasOwnProperty(f)&&(c[f]=o(i[f],l));return c;case"Array":return p=s.util.objId(i),l[p]?l[p]:(c=[],l[p]=c,i.forEach(function(g,v){c[v]=o(g,l)}),c);default:return i}}},languages:{extend:function(o,i){var l=s.util.clone(s.languages[o]);for(var c in i)l[c]=i[c];return l},insertBefore:function(o,i,l,c){var p=(c=c||s.languages)[o],h={};for(var f in p)if(p.hasOwnProperty(f)){if(f==i)for(var g in l)l.hasOwnProperty(g)&&(h[g]=l[g]);l.hasOwnProperty(f)||(h[f]=p[f])}var v=c[o];return c[o]=h,s.languages.DFS(s.languages,function(w,m){m===v&&w!=o&&(this[w]=h)}),h},DFS:function o(i,l,c,p){p=p||{};var h=s.util.objId;for(var f in i)if(i.hasOwnProperty(f)){l.call(i,f,i[f],c||f);var g=i[f],v=s.util.type(g);v!=="Object"||p[h(g)]?v!=="Array"||p[h(g)]||(p[h(g)]=!0,o(g,l,f,p)):(p[h(g)]=!0,o(g,l,null,p))}}},plugins:{},highlightAll:function(o,i){s.highlightAllUnder(document,o,i)},highlightAllUnder:function(o,i,l){var c={callback:l,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};s.hooks.run("before-highlightall",c);for(var p,h=c.elements||o.querySelectorAll(c.selector),f=0;p=h[f++];)s.highlightElement(p,i===!0,c.callback)},highlightElement:function(o,i,l){for(var c,p,h=o;h&&!r.test(h.className);)h=h.parentNode;h&&(c=(h.className.match(r)||[,""])[1].toLowerCase(),p=s.languages[c]),o.className=o.className.replace(r,"").replace(/\s+/g," ")+" language-"+c,o.parentNode&&(h=o.parentNode,/pre/i.test(h.nodeName)&&(h.className=h.className.replace(r,"").replace(/\s+/g," ")+" language-"+c));var f={element:o,language:c,grammar:p,code:o.textContent},g=function(w){f.highlightedCode=w,s.hooks.run("before-insert",f),f.element.innerHTML=f.highlightedCode,s.hooks.run("after-highlight",f),s.hooks.run("complete",f),l&&l.call(f.element)};if(s.hooks.run("before-sanity-check",f),f.code)if(s.hooks.run("before-highlight",f),f.grammar)if(i&&n.Worker){var v=new Worker(s.filename);v.onmessage=function(w){g(w.data)},v.postMessage(JSON.stringify({language:f.language,code:f.code,immediateClose:!0}))}else g(s.highlight(f.code,f.grammar,f.language));else g(s.util.encode(f.code));else s.hooks.run("complete",f)},highlight:function(o,i,l){var c={code:o,grammar:i,language:l};return s.hooks.run("before-tokenize",c),c.tokens=s.tokenize(c.code,c.grammar),s.hooks.run("after-tokenize",c),u.stringify(s.util.encode(c.tokens),c.language)},matchGrammar:function(o,i,l,c,p,h,f){for(var g in l)if(l.hasOwnProperty(g)&&l[g]){if(g==f)return;var v=l[g];v=s.util.type(v)==="Array"?v:[v];for(var w=0;w<v.length;++w){var m=v[w],x=m.inside,S=!!m.lookbehind,C=!!m.greedy,k=0,y=m.alias;if(C&&!m.pattern.global){var B=m.pattern.toString().match(/[imuy]*$/)[0];m.pattern=RegExp(m.pattern.source,B+"g")}m=m.pattern||m;for(var N=c,L=p;N<i.length;L+=i[N].length,++N){var U=i[N];if(i.length>o.length)return;if(!(U instanceof u)){if(C&&N!=i.length-1){if(m.lastIndex=L,!(F=m.exec(o)))break;for(var Y=F.index+(S?F[1].length:0),J=F.index+F[0].length,z=N,q=L,re=i.length;z<re&&(q<J||!i[z].type&&!i[z-1].greedy);++z)Y>=(q+=i[z].length)&&(++N,L=q);if(i[N]instanceof u)continue;se=z-N,U=o.slice(L,q),F.index-=L}else{m.lastIndex=0;var F=m.exec(U),se=1}if(F){S&&(k=F[1]?F[1].length:0),J=(Y=F.index+k)+(F=F[0].slice(k)).length;var j=U.slice(0,Y),Q=U.slice(J),H=[N,se];j&&(++N,L+=j.length,H.push(j));var G=new u(g,x?s.tokenize(F,x):F,y,F,C);if(H.push(G),Q&&H.push(Q),Array.prototype.splice.apply(i,H),se!=1&&s.matchGrammar(o,i,l,N,L,!0,g),h)break}else if(h)break}}}}},tokenize:function(o,i){var l=[o],c=i.rest;if(c){for(var p in c)i[p]=c[p];delete i.rest}return s.matchGrammar(o,l,i,0,0,!1),l},hooks:{all:{},add:function(o,i){var l=s.hooks.all;l[o]=l[o]||[],l[o].push(i)},run:function(o,i){var l=s.hooks.all[o];if(l&&l.length)for(var c,p=0;c=l[p++];)c(i)}},Token:u};function u(o,i,l,c,p){this.type=o,this.content=i,this.alias=l,this.length=0|(c||"").length,this.greedy=!!p}if(n.Prism=s,u.stringify=function(o,i,l){if(typeof o=="string")return o;if(Array.isArray(o))return o.map(function(f){return u.stringify(f,i,o)}).join("");var c={type:o.type,content:u.stringify(o.content,i,l),tag:"span",classes:["token",o.type],attributes:{},language:i,parent:l};if(o.alias){var p=Array.isArray(o.alias)?o.alias:[o.alias];Array.prototype.push.apply(c.classes,p)}s.hooks.run("wrap",c);var h=Object.keys(c.attributes).map(function(f){return f+'="'+(c.attributes[f]||"").replace(/"/g,"&quot;")+'"'}).join(" ");return"<"+c.tag+' class="'+c.classes.join(" ")+'"'+(h?" "+h:"")+">"+c.content+"</"+c.tag+">"},!n.document)return n.addEventListener&&(s.disableWorkerMessageHandler||n.addEventListener("message",function(o){var i=JSON.parse(o.data),l=i.language,c=i.code,p=i.immediateClose;n.postMessage(s.highlight(c,s.languages[l],l)),p&&n.close()},!1)),s;var d=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return d&&(s.filename=d.src,s.manual||d.hasAttribute("data-manual")||(document.readyState!=="loading"?window.requestAnimationFrame?window.requestAnimationFrame(s.highlightAll):window.setTimeout(s.highlightAll,16):document.addEventListener("DOMContentLoaded",s.highlightAll))),s}(typeof window<"u"?window:typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope?self:{});e.exports&&(e.exports=t),Et!==void 0&&(Et.Prism=t),t.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},t.languages.markup.tag.inside["attr-value"].inside.entity=t.languages.markup.entity,t.hooks.add("wrap",function(n){n.type==="entity"&&(n.attributes.title=n.content.replace(/&amp;/,"&"))}),Object.defineProperty(t.languages.markup.tag,"addInlined",{value:function(n,r){var a={};a["language-"+r]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:t.languages[r]},a.cdata=/^<!\[CDATA\[|\]\]>$/i;var s={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:a}};s["language-"+r]={pattern:/[\s\S]+/,inside:t.languages[r]};var u={};u[n]={pattern:RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g,n),"i"),lookbehind:!0,greedy:!0,inside:s},t.languages.insertBefore("markup","cdata",u)}}),t.languages.xml=t.languages.extend("markup",{}),t.languages.html=t.languages.markup,t.languages.mathml=t.languages.markup,t.languages.svg=t.languages.markup,function(n){var r=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;n.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+?[\s\S]*?(?:;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:RegExp("url\\((?:"+r.source+"|.*?)\\)","i"),selector:RegExp(`[^{}\\s](?:[^{};"']|`+r.source+")*?(?=\\s*\\{)"),string:{pattern:r,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:,]/},n.languages.css.atrule.inside.rest=n.languages.css;var a=n.languages.markup;a&&(a.tag.addInlined("style","css"),n.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:a.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:n.languages.css}},alias:"language-css"}},a.tag))}(t),t.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},t.languages.javascript=t.languages.extend("clike",{"class-name":[t.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],number:/\b(?:(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\d+n|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,function:/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),t.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,t.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})\]]))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,lookbehind:!0,inside:t.languages.javascript},{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,inside:t.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,lookbehind:!0,inside:t.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,lookbehind:!0,inside:t.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),t.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,greedy:!0,inside:{interpolation:{pattern:/\${[^}]+}/,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:t.languages.javascript}},string:/[\s\S]+/}}}),t.languages.markup&&t.languages.markup.tag.addInlined("script","javascript"),t.languages.js=t.languages.javascript,typeof self<"u"&&self.Prism&&self.document&&document.querySelector&&(self.Prism.fileHighlight=function(n){n=n||document;var r={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"};Array.prototype.slice.call(n.querySelectorAll("pre[data-src]")).forEach(function(a){if(!a.hasAttribute("data-src-loaded")){for(var s,u=a.getAttribute("data-src"),d=a,o=/\blang(?:uage)?-([\w-]+)\b/i;d&&!o.test(d.className);)d=d.parentNode;if(d&&(s=(a.className.match(o)||[,""])[1]),!s){var i=(u.match(/\.(\w+)$/)||[,""])[1];s=r[i]||i}var l=document.createElement("code");l.className="language-"+s,a.textContent="",l.textContent="Loading…",a.appendChild(l);var c=new XMLHttpRequest;c.open("GET",u,!0),c.onreadystatechange=function(){c.readyState==4&&(c.status<400&&c.responseText?(l.textContent=c.responseText,t.highlightElement(l),a.setAttribute("data-src-loaded","")):c.status>=400?l.textContent="✖ Error "+c.status+" while fetching file: "+c.statusText:l.textContent="✖ Error: File does not exist or is empty")},c.send(null)}}),t.plugins.toolbar&&t.plugins.toolbar.registerButton("download-file",function(a){var s=a.element.parentNode;if(s&&/pre/i.test(s.nodeName)&&s.hasAttribute("data-src")&&s.hasAttribute("data-download-link")){var u=s.getAttribute("data-src"),d=document.createElement("a");return d.textContent=s.getAttribute("data-download-link-label")||"Download",d.setAttribute("download",""),d.href=u,d}})},document.addEventListener("DOMContentLoaded",function(){self.Prism.fileHighlight()}))}),E=function(e,t){if(!e)throw Error("CodeFlask expects a parameter which is Element or a String selector");if(!t)throw Error("CodeFlask expects an object containing options as second parameter");if(e.nodeType)this.editorRoot=e;else{var n=document.querySelector(e);n&&(this.editorRoot=n)}this.opts=t,this.startEditor()};E.prototype.startEditor=function(){if(!Ct(pr,null,this.opts.styleParent))throw Error("Failed to inject CodeFlask CSS.");this.createWrapper(),this.createTextarea(),this.createPre(),this.createCode(),this.runOptions(),this.listenTextarea(),this.populateDefault(),this.updateCode(this.code)},E.prototype.createWrapper=function(){this.code=this.editorRoot.innerHTML,this.editorRoot.innerHTML="",this.elWrapper=this.createElement("div",this.editorRoot),this.elWrapper.classList.add("codeflask")},E.prototype.createTextarea=function(){this.elTextarea=this.createElement("textarea",this.elWrapper),this.elTextarea.classList.add("codeflask__textarea","codeflask__flatten")},E.prototype.createPre=function(){this.elPre=this.createElement("pre",this.elWrapper),this.elPre.classList.add("codeflask__pre","codeflask__flatten")},E.prototype.createCode=function(){this.elCode=this.createElement("code",this.elPre),this.elCode.classList.add("codeflask__code","language-"+(this.opts.language||"html"))},E.prototype.createLineNumbers=function(){this.elLineNumbers=this.createElement("div",this.elWrapper),this.elLineNumbers.classList.add("codeflask__lines"),this.setLineNumber()},E.prototype.createElement=function(e,t){var n=document.createElement(e);return t.appendChild(n),n},E.prototype.runOptions=function(){this.opts.rtl=this.opts.rtl||!1,this.opts.tabSize=this.opts.tabSize||2,this.opts.enableAutocorrect=this.opts.enableAutocorrect||!1,this.opts.lineNumbers=this.opts.lineNumbers||!1,this.opts.defaultTheme=this.opts.defaultTheme!==!1,this.opts.areaId=this.opts.areaId||null,this.opts.ariaLabelledby=this.opts.ariaLabelledby||null,this.opts.readonly=this.opts.readonly||null,typeof this.opts.handleTabs!="boolean"&&(this.opts.handleTabs=!0),typeof this.opts.handleSelfClosingCharacters!="boolean"&&(this.opts.handleSelfClosingCharacters=!0),typeof this.opts.handleNewLineIndentation!="boolean"&&(this.opts.handleNewLineIndentation=!0),this.opts.rtl===!0&&(this.elTextarea.setAttribute("dir","rtl"),this.elPre.setAttribute("dir","rtl")),this.opts.enableAutocorrect===!1&&(this.elTextarea.setAttribute("spellcheck","false"),this.elTextarea.setAttribute("autocapitalize","off"),this.elTextarea.setAttribute("autocomplete","off"),this.elTextarea.setAttribute("autocorrect","off")),this.opts.lineNumbers&&(this.elWrapper.classList.add("codeflask--has-line-numbers"),this.createLineNumbers()),this.opts.defaultTheme&&Ct(cr,"theme-default",this.opts.styleParent),this.opts.areaId&&this.elTextarea.setAttribute("id",this.opts.areaId),this.opts.ariaLabelledby&&this.elTextarea.setAttribute("aria-labelledby",this.opts.ariaLabelledby),this.opts.readonly&&this.enableReadonlyMode()},E.prototype.updateLineNumbersCount=function(){for(var e="",t=1;t<=this.lineNumber;t++)e=e+'<span class="codeflask__lines__line">'+t+"</span>";this.elLineNumbers.innerHTML=e},E.prototype.listenTextarea=function(){var e=this;this.elTextarea.addEventListener("input",function(t){e.code=t.target.value,e.elCode.innerHTML=At(t.target.value),e.highlight(),setTimeout(function(){e.runUpdate(),e.setLineNumber()},1)}),this.elTextarea.addEventListener("keydown",function(t){e.handleTabs(t),e.handleSelfClosingCharacters(t),e.handleNewLineIndentation(t)}),this.elTextarea.addEventListener("scroll",function(t){e.elPre.style.transform="translate3d(-"+t.target.scrollLeft+"px, -"+t.target.scrollTop+"px, 0)",e.elLineNumbers&&(e.elLineNumbers.style.transform="translate3d(0, -"+t.target.scrollTop+"px, 0)")})},E.prototype.handleTabs=function(e){if(this.opts.handleTabs){if(e.keyCode!==9)return;e.preventDefault();var t=this.elTextarea,n=t.selectionDirection,r=t.selectionStart,a=t.selectionEnd,s=t.value,u=s.substr(0,r),d=s.substring(r,a),o=s.substring(a),i=" ".repeat(this.opts.tabSize);if(r!==a&&d.length>=i.length){var l=r-u.split(`
`).pop().length,c=i.length,p=i.length;e.shiftKey?(s.substr(l,i.length)===i?(c=-c,l>r?(d=d.substring(0,l)+d.substring(l+i.length),p=0):l===r?(c=0,p=0,d=d.substring(i.length)):(p=-p,u=u.substring(0,l)+u.substring(l+i.length))):(c=0,p=0),d=d.replace(new RegExp(`
`+i.split("").join("\\"),"g"),`
`)):(u=u.substr(0,l)+i+u.substring(l,r),d=d.replace(/\n/g,`
`+i)),t.value=u+d+o,t.selectionStart=r+c,t.selectionEnd=r+d.length+p,t.selectionDirection=n}else t.value=u+i+o,t.selectionStart=r+i.length,t.selectionEnd=r+i.length;var h=t.value;this.updateCode(h),this.elTextarea.selectionEnd=a+this.opts.tabSize}},E.prototype.handleSelfClosingCharacters=function(e){if(this.opts.handleSelfClosingCharacters){var t=e.key;if(["(","[","{","<","'",'"'].includes(t)||[")","]","}",">","'",'"'].includes(t))switch(t){case"(":case")":this.closeCharacter(t);break;case"[":case"]":this.closeCharacter(t);break;case"{":case"}":this.closeCharacter(t);break;case"<":case">":case"'":case'"':this.closeCharacter(t)}}},E.prototype.setLineNumber=function(){this.lineNumber=this.code.split(`
`).length,this.opts.lineNumbers&&this.updateLineNumbersCount()},E.prototype.handleNewLineIndentation=function(e){if(this.opts.handleNewLineIndentation&&e.keyCode===13){e.preventDefault();var t=this.elTextarea,n=t.selectionStart,r=t.selectionEnd,a=t.value,s=a.substr(0,n),u=a.substring(r),d=a.lastIndexOf(`
`,n-1),o=d+a.slice(d+1).search(/[^ ]|$/),i=o>d?o-d:0,l=s+`
`+" ".repeat(i)+u;t.value=l,t.selectionStart=n+i+1,t.selectionEnd=n+i+1,this.updateCode(t.value)}},E.prototype.closeCharacter=function(e){var t=this.elTextarea.selectionStart,n=this.elTextarea.selectionEnd;if(this.skipCloseChar(e)){var r=this.code.substr(n,1)===e,a=r?n+1:n,s=!r&&["'",'"'].includes(e)?e:"",u=""+this.code.substring(0,t)+s+this.code.substring(a);this.updateCode(u),this.elTextarea.selectionEnd=++this.elTextarea.selectionStart}else{var d=e;switch(e){case"(":d=String.fromCharCode(e.charCodeAt()+1);break;case"<":case"{":case"[":d=String.fromCharCode(e.charCodeAt()+2)}var o=this.code.substring(t,n),i=""+this.code.substring(0,t)+o+d+this.code.substring(n);this.updateCode(i)}this.elTextarea.selectionEnd=t},E.prototype.skipCloseChar=function(e){var t=this.elTextarea.selectionStart,n=this.elTextarea.selectionEnd,r=Math.abs(n-t)>0;return[")","}","]",">"].includes(e)||["'",'"'].includes(e)&&!r},E.prototype.updateCode=function(e){this.code=e,this.elTextarea.value=e,this.elCode.innerHTML=At(e),this.highlight(),this.setLineNumber(),setTimeout(this.runUpdate.bind(this),1)},E.prototype.updateLanguage=function(e){var t=this.opts.language;this.elCode.classList.remove("language-"+t),this.elCode.classList.add("language-"+e),this.opts.language=e,this.highlight()},E.prototype.addLanguage=function(e,t){_t.languages[e]=t},E.prototype.populateDefault=function(){this.updateCode(this.code)},E.prototype.highlight=function(){_t.highlightElement(this.elCode,!1)},E.prototype.onUpdate=function(e){if(e&&{}.toString.call(e)!=="[object Function]")throw Error("CodeFlask expects callback of type Function");this.updateCallBack=e},E.prototype.getCode=function(){return this.code},E.prototype.runUpdate=function(){this.updateCallBack&&this.updateCallBack(this.code)},E.prototype.enableReadonlyMode=function(){this.elTextarea.setAttribute("readonly",!0)},E.prototype.disableReadonlyMode=function(){this.elTextarea.removeAttribute("readonly")};const gr=({code:e,type:t,onChange:n})=>{const r=I.useRef(null),a=I.useRef(null),s=I.useRef(null);return I.useEffect(()=>{r.current&&a.current===null&&(a.current=new E(r.current,{language:t||"js",lineNumbers:!0}),a.current.onUpdate(u=>{s.current!==u&&n(u)}))},[t,n]),I.useEffect(()=>{a.current&&e!==a.current.getCode()&&(s.current=e,a.current.updateCode(e||"const a = 1;"))},[e]),O.jsx("div",{ref:r,style:{height:"100%",width:"100%"}})},mr=`
{
    "itemMaxWidth": 300,
    "itemAspectRatio": 1.33,
    "layout": {
        "3": [
            ["A", "B", "C"],
            ["D", "E", "E"],
            ["D", "F", "G"]
        ]
    }
}
`.trim(),br=()=>{const[e,t]=I.useState(mr),[n,r]=I.useState({}),[a,s]=I.useState("");return I.useEffect(()=>{try{console.log("code",e),console.log("JSON.parse(code)",JSON.parse(e)),r(JSON.parse(e)),s("")}catch(u){s(u.message)}},[e]),O.jsxs("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%"},children:[O.jsxs("div",{id:"primary",style:{flexGrow:1},children:[O.jsx("div",{style:{height:600,width:1020,overflowY:"scroll",overflowX:"hidden",resize:"both",border:"1px solid black"},children:n&&O.jsx(or,{...n})}),O.jsx("div",{style:{color:"red"},children:a})]}),O.jsxs("div",{id:"secondary",style:{borderTop:"1px solid black",height:"20%"},children:[" ",O.jsx(gr,{code:e,type:"js",onChange:t})]})]})};export{br as GridSamplePage,br as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
